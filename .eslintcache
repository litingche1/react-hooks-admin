[{"D:\\mycode\\react\\react-hooks-admin\\src\\index.js":"1","D:\\mycode\\react\\react-hooks-admin\\src\\App.js":"2","D:\\mycode\\react\\react-hooks-admin\\src\\reportWebVitals.js":"3","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\privateRouter\\index.js":"4","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\index.js":"5","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\index.js":"6","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\cookies.js":"7","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\components\\aside.js":"8","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\components\\header.js":"9","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\RegisterFrom.js":"10","D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\LoginFrom.js":"11","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\containerMain\\index.js":"12","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\validate.js":"13","D:\\mycode\\react\\react-hooks-admin\\src\\api\\account.js":"14","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\containerMain\\components.js":"15","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\asideMenu\\index.js":"16","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\code\\index.js":"17","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\request.js":"18","D:\\mycode\\react\\react-hooks-admin\\src\\views\\department\\list.js":"19","D:\\mycode\\react\\react-hooks-admin\\src\\views\\user\\Add.js":"20","D:\\mycode\\react\\react-hooks-admin\\src\\views\\user\\list.js":"21","D:\\mycode\\react\\react-hooks-admin\\src\\views\\department\\add.js":"22","D:\\mycode\\react\\react-hooks-admin\\src\\router\\index.js":"23","D:\\mycode\\react\\react-hooks-admin\\src\\api\\department.js":"24","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\table\\index.js":"25","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\Form\\index.js":"26","D:\\mycode\\react\\react-hooks-admin\\src\\api\\table.js":"27","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\requestUrl.js":"28","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\FromSearch\\index.js":"29","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\global.js":"30","D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\index.js":"31","D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\job.js":"32","D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\department.js":"33","D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\config.js":"34"},{"size":505,"mtime":1611825416977,"results":"35","hashOfConfig":"36"},{"size":597,"mtime":1610955982764,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1610421613676,"results":"38","hashOfConfig":"36"},{"size":367,"mtime":1611042949292,"results":"39","hashOfConfig":"36"},{"size":512,"mtime":1610421613678,"results":"40","hashOfConfig":"36"},{"size":1230,"mtime":1611042949297,"results":"41","hashOfConfig":"36"},{"size":462,"mtime":1611042949293,"results":"42","hashOfConfig":"36"},{"size":240,"mtime":1610955982780,"results":"43","hashOfConfig":"36"},{"size":522,"mtime":1610955982780,"results":"44","hashOfConfig":"36"},{"size":6964,"mtime":1610676985861,"results":"45","hashOfConfig":"36"},{"size":4781,"mtime":1611042949298,"results":"46","hashOfConfig":"36"},{"size":479,"mtime":1610955982780,"results":"47","hashOfConfig":"36"},{"size":329,"mtime":1610676985845,"results":"48","hashOfConfig":"36"},{"size":1153,"mtime":1610676985845,"results":"49","hashOfConfig":"36"},{"size":545,"mtime":1611042949290,"results":"50","hashOfConfig":"36"},{"size":2206,"mtime":1610955982780,"results":"51","hashOfConfig":"36"},{"size":1598,"mtime":1610676985845,"results":"52","hashOfConfig":"36"},{"size":1079,"mtime":1611537286644,"results":"53","hashOfConfig":"36"},{"size":3028,"mtime":1611822305821,"results":"54","hashOfConfig":"36"},{"size":104,"mtime":1610955982796,"results":"55","hashOfConfig":"36"},{"size":94,"mtime":1610955982796,"results":"56","hashOfConfig":"36"},{"size":3227,"mtime":1611798308198,"results":"57","hashOfConfig":"36"},{"size":1527,"mtime":1610955982780,"results":"58","hashOfConfig":"36"},{"size":1148,"mtime":1611537286644,"results":"59","hashOfConfig":"36"},{"size":5124,"mtime":1611818857774,"results":"60","hashOfConfig":"36"},{"size":4768,"mtime":1611801304215,"results":"61","hashOfConfig":"36"},{"size":428,"mtime":1611537286644,"results":"62","hashOfConfig":"36"},{"size":135,"mtime":1611537286644,"results":"63","hashOfConfig":"36"},{"size":5072,"mtime":1611822254688,"results":"64","hashOfConfig":"36"},{"size":153,"mtime":1611822254694,"results":"65","hashOfConfig":"36"},{"size":351,"mtime":1611825165546,"results":"66","hashOfConfig":"36"},{"size":114,"mtime":1611825416974,"results":"67","hashOfConfig":"36"},{"size":140,"mtime":1611825416971,"results":"68","hashOfConfig":"36"},{"size":225,"mtime":1611825416980,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gxsebh",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\mycode\\react\\react-hooks-admin\\src\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\App.js",[],["145","146"],"D:\\mycode\\react\\react-hooks-admin\\src\\reportWebVitals.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\privateRouter\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\utils\\cookies.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\components\\aside.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Index\\components\\header.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\RegisterFrom.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\Login\\LoginFrom.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\containerMain\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\utils\\validate.js",["147"],"export const passwordCheckRule = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/\r\nconst emailCheckRule = /^([a-zA-Z\\d])(\\w|\\-)+@[a-zA-Z\\d]+\\.[a-zA-Z]{2,4}$/\r\nexport function validate_email(value) {\r\n    return emailCheckRule.test(value)\r\n}\r\n\r\nexport function validate_password(value) {\r\n    return passwordCheckRule.test(value)\r\n}","D:\\mycode\\react\\react-hooks-admin\\src\\api\\account.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\containerMain\\components.js",["148"],"const components = []\r\n// 建立上下文件关系\r\nconst files = require.context(\"../../views\", true, /\\.js$/);// 第一个参数：目录，第二参数：是否查找子级目录，第三参数：指定查找到文件\r\nfiles.keys().map(key => {\r\n    if (key.includes('./Index') || key.includes('./Login')) { return false }\r\n    const splitFilesName = key.split('.')\r\n    const path = `/index${splitFilesName[1].toLowerCase()}`\r\n    const component = files(key).default;\r\n    components.push({ path, component })\r\n})\r\nexport default components","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\asideMenu\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\code\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\utils\\request.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\department\\list.js",["149","150","151"],"import { useState, Fragment, useRef } from 'react'\r\nimport { Form, Input, Button, Switch, message } from 'antd';\r\nimport { DepartmentStatus } from 'api/department'\r\nimport { Link } from 'react-router-dom'\r\nimport TableCommon from 'compoents/table'\r\nconst DepartmentList = () => {\r\n\r\n    const [switchId, setswitchId] = useState()\r\n    const table = useRef()\r\n    //禁启用\r\n    const swithOnChange = async (data) => {\r\n        setswitchId(data.id)\r\n        let params = {\r\n            id: data.id,\r\n            status: !data.status\r\n        }\r\n        let res = await DepartmentStatus(params)\r\n        if (res.data.resCode === 0) {\r\n            message.success(res.data.message)\r\n            setswitchId()\r\n        }\r\n    }\r\n    const tableConfig = {\r\n        url: 'department',\r\n        method: 'post',\r\n        checkbox: true,\r\n        columns: [\r\n            { title: \"部门名称\", dataIndex: \"name\", key: \"name\" },\r\n            {\r\n                title: \"禁启用\", dataIndex: \"status\", key: \"status\",\r\n                render: (status, rowData) => {\r\n                    return <Switch loading={switchId === rowData.id} onChange={() => { swithOnChange(rowData) }} checkedChildren=\"启用\" unCheckedChildren=\"禁用\" defaultChecked={rowData.status} />\r\n                }\r\n            },\r\n            { title: \"人员数量\", dataIndex: \"number\", key: \"number\" },\r\n            {\r\n                title: \"操作\", dataIndex: \"operation\", key: \"operation\", width: 215,\r\n                render: (text, rowData) => {\r\n                    return (\r\n                        <div className=\"inline-button\">\r\n                            <Link to={{ pathname: '/index/department/add', state: { id: rowData.id } }}><Button type=\"primary\" onClick={() => { goPage(rowData.id) }}>编辑</Button></Link>\r\n\r\n                            <Button className=\"ml10\" onClick={e => { deleteList(rowData.id) }}>删除</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ],\r\n        formItem:[\r\n            {\r\n                type: 'Input',\r\n                label: '部门名称',\r\n                required: true,\r\n                name: 'name',\r\n                rules: []\r\n            },\r\n            {\r\n                type: 'Select',\r\n                label: '人员数量',\r\n                name: 'number',\r\n                required: true,\r\n                rules: [],\r\n                optionkey:'select',\r\n                style:{width:'100px'}\r\n            },\r\n        ]\r\n    }\r\n    //跳转到编辑页面\r\n    const goPage = (id) => {\r\n        console.log(id)\r\n    }\r\n    //搜索\r\n    const onFinish = (value) => {\r\n        // setpageNumber(1)\r\n        // setpageSize(10)\r\n        // getList()\r\n    }\r\n    //删除\r\n    const deleteList = id => {\r\n        table.current.deleteItem(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <TableCommon ref={table} batchButton={true} config={tableConfig}></TableCommon>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DepartmentList\r\n","D:\\mycode\\react\\react-hooks-admin\\src\\views\\user\\Add.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\user\\list.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\views\\department\\add.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\router\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\api\\department.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\table\\index.js",["152","153","154","155"],"import { useState, useEffect, Fragment, forwardRef, useImperativeHandle } from 'react'\r\nimport { Button, Table, Row, Col, Pagination, Modal, message,Form ,Input} from 'antd';\r\nimport { TableList, DeleteList } from 'api/table'\r\nimport PropTypes from 'prop-types';\r\nimport requestUrl from 'utils/requestUrl'\r\nimport FromSearch from 'compoents/FromSearch'\r\nconst TableCommon = forwardRef((props, ref) => {\r\n    const [TableData, setTableData] = useState([])\r\n    const [tableLoading, settableLoading] = useState(false)\r\n    const [pageNumber, setpageNumber] = useState(1)\r\n    const [pageSize, setpageSize] = useState(10)\r\n    const [total, settotal] = useState(0)\r\n    const [prepageSize, prepageSizeset] = useState(10)\r\n    const [isModalVisible, setisModalVisible] = useState(false)\r\n    const [itemId, setitemId] = useState()\r\n    const [SelectList, setSelectList] = useState([])\r\n    const [buttonLoading,setbuttonLoading]=useState(false)\r\n    const [keyWord, setkeyWord] = useState({})\r\n    useEffect(() => {\r\n        if (prepageSize !== pageSize) {\r\n            setpageNumber(1)\r\n        }\r\n    }, [pageSize])\r\n    useEffect(() => {\r\n        getList()\r\n    }, [pageNumber,keyWord])\r\n    const { columns, url, method, checkbox, rowKey,formItem } = props.config\r\n    //获取表格数据\r\n    const getList = async () => {\r\n        settableLoading(true)\r\n        const resData = {\r\n            url: requestUrl[url],\r\n            method,\r\n            params: {\r\n                pageNumber,\r\n                pageSize\r\n            }\r\n\r\n        }\r\n        if (keyWord) {\r\n            for(let key in keyWord){\r\n                resData.params[key] = keyWord[key]\r\n            }\r\n        }\r\n        let res = await TableList(resData)\r\n        if (res.data.resCode === 0) {\r\n            setTableData(res.data.data.data)\r\n            settotal(res.data.data.total)\r\n            settableLoading(false)\r\n            setbuttonLoading(false)\r\n            prepageSizeset(pageSize)\r\n        }\r\n\r\n    }\r\n    //分页的当前页\r\n    const onChangeCurrnePage = (value, page) => {\r\n        setpageNumber(value)\r\n    }\r\n    //每页条数\r\n    const onShowSizeChange = (value, page) => {\r\n        setpageSize(page)\r\n    }\r\n    //复选框方法\r\n    const onCheckbox = (value) => {\r\n        setSelectList(value)\r\n    }\r\n    //表格复选框\r\n    const rowSelection = {\r\n        onChange: onCheckbox\r\n    }\r\n    //父组件调用删除\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            deleteItem(id) {\r\n                deleteList(id)\r\n            }\r\n        }\r\n    })\r\n    //删除\r\n    const deleteList = id => {\r\n        if (id) {\r\n            setitemId(id)\r\n\r\n        } else {\r\n            if (SelectList.length <= 0) return false\r\n            let idList = SelectList.join()\r\n            setitemId(idList)\r\n        }\r\n        setisModalVisible(true)\r\n\r\n    }\r\n    const handleOk = async () => {\r\n        const resData = {\r\n            url: requestUrl[`${url}delete`],\r\n            method,\r\n            params: {\r\n                id: itemId\r\n            }\r\n\r\n        }\r\n        let res = await DeleteList(resData)\r\n        if (res.data.resCode === 0) {\r\n            message.success(res.data.message)\r\n            setisModalVisible(false)\r\n            setSelectList([])\r\n            getList()\r\n        }\r\n    }\r\n    //搜索\r\n    onsubmit=value=>{\r\n        setpageNumber(1)\r\n        setpageSize(10)\r\n        setkeyWord(value)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <FromSearch formItem={formItem} onFinish={onsubmit}  buttonloading={buttonLoading}/>\r\n            <Table pagination={false} rowKey={rowKey ? rowKey : \"id\"} rowSelection={checkbox ? rowSelection : null} loading={tableLoading} columns={columns} dataSource={TableData} bordered></Table>\r\n            <Row className=\"mt10\">\r\n                <Col span={8}>\r\n                    {\r\n                        props.batchButton && <Button onClick={() => { deleteList() }}>批量删除</Button>\r\n                    }\r\n                </Col>\r\n                <Col span={16}>\r\n                    <Pagination\r\n                        className=\"pull-right\"\r\n                        current={pageNumber}\r\n                        onChange={onChangeCurrnePage}\r\n                        onShowSizeChange={onShowSizeChange}\r\n                        total={total}\r\n                        showTotal={total => `总共${total} 条`}\r\n                        showQuickJumper\r\n                        showSizeChanger\r\n                        pageSize={pageSize}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Modal title=\"提示！\" okText=\"确定\" cancelText=\"取消\" visible={isModalVisible} onOk={handleOk} onCancel={() => { setisModalVisible(false) }}>\r\n                <p className=\"tex-c\">确定删除该信息吗？<strong className=\"color-red\">删除后将无法恢复</strong></p>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n})\r\n//校验数据类型\r\nTableCommon.propTypes = {\r\n    config: PropTypes.object\r\n}\r\n//默认值\r\nTableCommon.defaultProps = {\r\n    batchButton: false\r\n}\r\nexport default TableCommon\r\n","D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\Form\\index.js",["156"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { Form, Input, Button, Select, Radio, InputNumber } from 'antd'\r\nconst { Option } = Select\r\nconst FromCommon = (props) => {\r\n    const { FieldsValue, buttonloading } = props\r\n    const [form] = Form.useForm();\r\n    const [loading, setloading] = useState(false)\r\n    useEffect(() => {\r\n        form.setFieldsValue(FieldsValue)\r\n    }, [FieldsValue, form])\r\n    useEffect(() => {\r\n        setloading(false)\r\n        form.resetFields()\r\n    }, [buttonloading, form])\r\n    const messageRules = {\r\n        'Input': '请输入',\r\n        'TextArea': '请输入',\r\n        'Radio': '请选择',\r\n        'InputNumber': '请输入',\r\n        'Select': '请选择',\r\n    }\r\n    //表单提交\r\n    const onFinish = async value => {\r\n        setloading(true)\r\n        props.onFinish(value)\r\n    }\r\n    //校验规则\r\n    const itemRules = (item) => {\r\n        let rules = []\r\n        if (item.required) {\r\n            let message = item.message || `${messageRules[item.type]}${item.label}`\r\n            rules.push({ required: true, message })\r\n        }\r\n        if (item.rules && item.rules.length > 0) {\r\n            rules.concat(item.rules)\r\n        }\r\n        return rules\r\n    }\r\n    //input\r\n    const inputElem = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Input placeholder={item.Select} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //inputNumber\r\n    const inputNumber = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <InputNumber min={item.min} max={item.max} value={1} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //TextArea\r\n    const textAreaElem = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Input.TextArea placeholder={item.Select} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //select\r\n    const select = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Select style={item.style} placeholder={item.Select}>\r\n                    {\r\n                        item.options && item.options.map(elem => {\r\n                            return <Option value={elem.value} key={elem.value}>{elem.label}</Option>\r\n                        })\r\n                    }\r\n\r\n                </Select>\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //radio\r\n    const radio = item => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Radio.Group>\r\n                    {\r\n                        item.options && item.options.map(elem => {\r\n                            return <Radio value={elem.value} key={`${elem.value}${elem.label}`}>{elem.label}</Radio>\r\n                        })\r\n                    }\r\n\r\n                </Radio.Group>\r\n\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //初始化表单\r\n    const initFromItem = () => {\r\n        const { formItem } = props\r\n        if (!formItem || (formItem && formItem.length === 0)) { return false }\r\n        const fromList = []\r\n        formItem.map(item => {\r\n            switch (item.type) {\r\n                case 'Input':\r\n                    fromList.push(inputElem(item))\r\n                    break;\r\n                case 'TextArea':\r\n                    fromList.push(textAreaElem(item))\r\n                    break;\r\n                case 'Select':\r\n                    fromList.push(select(item))\r\n                    break;\r\n                case 'Radio':\r\n                    fromList.push(radio(item))\r\n                    break;\r\n                case 'InputNumber':\r\n                    fromList.push(inputNumber(item))\r\n                    break;\r\n                default:\r\n                    fromList.push()\r\n            }\r\n        })\r\n        return fromList\r\n    }\r\n    const { formItemLayout, initialValues } = props\r\n    return (\r\n        <Fragment>\r\n            <Form form={form}  {...formItemLayout} onFinish={onFinish} initialValues={initialValues}>\r\n                {initFromItem()}\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        确定\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default FromCommon\r\n","D:\\mycode\\react\\react-hooks-admin\\src\\api\\table.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\utils\\requestUrl.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\compoents\\FromSearch\\index.js",["157"],"import { useEffect, useState, Fragment } from 'react'\r\nimport { Form, Input, Button, Select, Radio, InputNumber } from 'antd'\r\nimport PropTypes from 'prop-types';\r\nconst { Option } = Select\r\nimport global from 'utils/global'\r\nconst FromSearch = (props) => {\r\n    const { FieldsValue, buttonloading } = props\r\n    const [form] = Form.useForm();\r\n    const [loading, setloading] = useState(false)\r\n    useEffect(() => {\r\n        form.setFieldsValue(FieldsValue)\r\n    }, [FieldsValue, form])\r\n    useEffect(() => {\r\n        setloading(buttonloading)\r\n        form.resetFields()\r\n    }, [buttonloading, form,loading])\r\n    const messageRules = {\r\n        'Input': '请输入',\r\n        'TextArea': '请输入',\r\n        'Radio': '请选择',\r\n        'InputNumber': '请输入',\r\n        'Select': '请选择',\r\n    }\r\n    //表单提交\r\n    const onFinish = async value => {\r\n        setloading(true)\r\n        props.onFinish(value)\r\n    }\r\n    //校验规则\r\n    const itemRules = (item) => {\r\n        let rules = []\r\n        if (item.required) {\r\n            let message = item.message || `${messageRules[item.type]}${item.label}`\r\n            rules.push({ required: true, message })\r\n        }\r\n        if (item.rules && item.rules.length > 0) {\r\n            rules.concat(item.rules)\r\n        }\r\n        return rules\r\n    }\r\n    //input\r\n    const inputElem = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Input placeholder={item.Select} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //inputNumber\r\n    const inputNumber = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <InputNumber min={item.min} max={item.max} value={1} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //TextArea\r\n    const textAreaElem = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Input.TextArea placeholder={item.Select} />\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //select\r\n    const select = (item) => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Select style={item.style} placeholder={item.Select}>\r\n                    {\r\n                        item.options && item.options.map(elem => {\r\n                            return <Option value={elem.value} key={elem.value}>{elem.label}</Option>\r\n                        })\r\n                    }\r\n\r\n                </Select>\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //radio\r\n    const radio = item => {\r\n        const rules = itemRules(item)\r\n        return (\r\n            <Form.Item label={item.label} name={item.name} key={item.name} rules={rules}>\r\n                <Radio.Group>\r\n                    {\r\n                        item.options && item.options.map(elem => {\r\n                            return <Radio value={elem.value} key={`${elem.value}${elem.label}`}>{elem.label}</Radio>\r\n                        })\r\n                    }\r\n\r\n                </Radio.Group>\r\n\r\n            </Form.Item>\r\n        )\r\n    }\r\n    //初始化表单\r\n    const initFromItem = () => {\r\n        const { formItem } = props\r\n        if (!formItem || (formItem && formItem.length === 0)) { return false }\r\n        const fromList = []\r\n        formItem.map(item => {\r\n            switch (item.type) {\r\n                case 'Input':\r\n                    fromList.push(inputElem(item))\r\n                    break;\r\n                case 'TextArea':\r\n                    fromList.push(textAreaElem(item))\r\n                    break;\r\n                case 'Select':\r\n                    item.options=global[item.optionkey]\r\n                    fromList.push(select(item))\r\n                    break;\r\n                case 'Radio':\r\n                    fromList.push(radio(item))\r\n                    break;\r\n                case 'InputNumber':\r\n                    fromList.push(inputNumber(item))\r\n                    break;\r\n                default:\r\n                    fromList.push()\r\n            }\r\n        })\r\n        return fromList\r\n    }\r\n    const { formItemLayout, initialValues } = props\r\n    return (\r\n        <Fragment>\r\n            <Form layout=\"inline\" form={form}  {...formItemLayout} onFinish={onFinish} initialValues={initialValues}>\r\n                {initFromItem()}\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        搜索\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n//校验数据类型\r\nFromSearch.propTypes = {\r\n    formItem: PropTypes.array\r\n}\r\n//默认值\r\nFromSearch.defaultProps = {\r\n    formItem: []\r\n}\r\nexport default FromSearch\r\n","D:\\mycode\\react\\react-hooks-admin\\src\\utils\\global.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\index.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\job.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\department.js",[],"D:\\mycode\\react\\react-hooks-admin\\src\\stroe\\reducer\\config.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":42,"nodeType":"164","messageId":"165","endLine":2,"endColumn":43,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":22,"nodeType":"169","messageId":"170","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"175","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":21},{"ruleId":"171","severity":1,"message":"176","line":73,"column":11,"nodeType":"173","messageId":"174","endLine":73,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":2,"column":62,"nodeType":"173","messageId":"174","endLine":2,"endColumn":66},{"ruleId":"171","severity":1,"message":"175","line":2,"column":68,"nodeType":"173","messageId":"174","endLine":2,"endColumn":73},{"ruleId":"177","severity":1,"message":"178","line":23,"column":8,"nodeType":"179","endLine":23,"endColumn":18,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":26,"column":8,"nodeType":"179","endLine":26,"endColumn":28,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"183","line":104,"column":27,"nodeType":"169","messageId":"184","endLine":104,"endColumn":29},{"ruleId":"167","severity":1,"message":"183","line":105,"column":27,"nodeType":"169","messageId":"184","endLine":105,"endColumn":29},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["187","188"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'onFinish' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prepageSize'. Either include it or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["190"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"messageId":"191","fix":"192","desc":"193"},{"messageId":"194","fix":"195","desc":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"removeEscape",{"range":"201","text":"202"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"203","text":"204"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [pageSize, prepageSize]",{"range":"205","text":"206"},"Update the dependencies array to be: [pageNumber, keyWord, getList]",{"range":"207","text":"208"},[122,123],"",[122,122],"\\",[1102,1112],"[pageSize, prepageSize]",[1164,1184],"[pageNumber, keyWord, getList]"]